/*
Copyright 2017 Hermann Krumrey <hermann@krumreyh.com>

This file is part of bundesliga-tippspiel-android.

bundesliga-tippspiel-android is free software: you can redistribute it and/or modify
it under the terms of the GNU General Public License as published by
the Free Software Foundation, either version 3 of the License, or
(at your option) any later version.

bundesliga-tippspiel-android is distributed in the hope that it will be useful,
but WITHOUT ANY WARRANTY; without even the implied warranty of
MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
GNU General Public License for more details.

You should have received a copy of the GNU General Public License
along with bundesliga-tippspiel-android.  If not, see <http://www.gnu.org/licenses/>.
*/

ext {
    version = "1.0.3"
    versionCode = 100003
}

// Define class paths
buildscript {
    repositories {
        jcenter()
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.1.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.2.41"
        classpath "org.jetbrains.dokka:dokka-android-gradle-plugin:0.9.17"
    }
}

// Shared operations for sub-projects
subprojects {

    // Define Repositories for submodules
    repositories {
        jcenter()
        mavenCentral()
        maven { url "https://jitpack.io" }
    }
    apply plugin: 'com.android.application'
    apply plugin: 'kotlin-android'
    apply plugin: 'jacoco'
    apply plugin: 'org.jetbrains.dokka-android'

    configurations {
        ktlint
    }

    // Define common submodule dependencies
    dependencies {
        api 'com.android.support:appcompat-v7:27.1.1'
        api 'com.android.support:support-v4:27.1.1'
        api 'com.android.support:cardview-v7:27.1.1'
        ktlint 'com.github.shyiko:ktlint:0.23.1'
        api "org.jetbrains.kotlin:kotlin-stdlib-jre7:1.2.41"
        api "org.jetbrains.anko:anko-commons:0.10.5"
        api 'com.google.code.gson:gson:2.8.5'
        api "com.squareup.okhttp3:okhttp:3.10.0"
        testImplementation "org.jetbrains.kotlin:kotlin-test-junit:1.1.51"
        testImplementation 'org.json:json:20180130'
    }

    task jacocoTestReport(type: JacocoReport, dependsOn: "testDebugUnitTest") {
        group = "Reporting"
        description = "Generate Jacoco coverage reports for Debug build"
        reports {
            xml.enabled = true
            html.enabled = true
        }
        // what to exclude from coverage report
        // UI, "noise", generated classes, platform classes, etc.
        def excludes = [
                '**/R.class',
                '**/R$*.class',
                '**/*$ViewInjector*.*',
                '**/BuildConfig.*',
                '**/Manifest*.*',
                '**/*Test*.*',
                'android/**/*.*',
                '**/*Fragment.*',
                '**/*Activity.*'
        ]
        // generated classes
        classDirectories = fileTree(
                dir: "$buildDir/intermediates/classes/debug",
                excludes: excludes
        ) + fileTree(
                dir: "$buildDir/tmp/kotlin-classes/debug",
                excludes: excludes
        )

        // sources
        sourceDirectories = files([
                android.sourceSets.main.java.srcDirs,
                "src/main/kotlin"
        ])
        executionData = files("$buildDir/jacoco/testDebugUnitTest.exec")
    }

    dokka {
        outputFormat = 'javadoc'
        outputDirectory = "$buildDir/javadoc"
        skipEmptyPackages = true
        noStdlibLink = true
    }

    // Define ktlint task
    task ktlint(type: JavaExec) {
        main = "com.github.shyiko.ktlint.Main"
        classpath = configurations.ktlint
        args "src/**/*.kt"
    }
    check.dependsOn ktlint
}

// Print version
task version(type: VersionTask)
class VersionTask extends DefaultTask {
    @SuppressWarnings("GroovyUnusedDeclaration")
    @TaskAction
    def version() {
        println project.ext.version
    }
}
